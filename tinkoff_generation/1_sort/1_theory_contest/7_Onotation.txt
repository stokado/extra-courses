O(N / 3) = O(N)
O((N * (N - 1) * (N - 2)) /6) = N(N^3)
O(1 + 2 + 3 + ... + N) = O(N)
O(1^2 + 2^2 + 3^2 + ... + N^2) = O(N^2)
O(logN + 3) = O(logN)
O(7) = O(1)
O(10^100) = O(1)


O(f(n)) = O(n^2)
def f(n):
    s = 0
    for i in range(n):
        for j in range(n):
            s += i * j
    return s
f(10)

O(g(n)) = O(n + n) = O(n)
def g(n):
    s = 0
    for i in range(n):
        s += i
    for i in range(n):
        s += i * i
    return s
g(10)

O(h(n)) = O(1)
def h(n):
    if n == 0:
        return 1
    return h(n - 1) * n
h(10)